{"version":3,"sources":["img/emojiwallpaper.jpg","img/logo.png","img/right.png","img/left.png","img/down.png","img/rotate-right.png","gameHelpers.js","components/styles/Tetris.styles.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/Cell.styles.js","components/Cell.jsx","components/styles/Stage.styles.js","components/Stage.jsx","components/styles/Display.styles.js","components/Display.jsx","components/styles/StartButton.styles.js","components/StartButton.jsx","components/styles/ControlPanel.styles.js","components/ControlPanel.jsx","firebase.js","components/styles/Highscores.styles.js","components/Highscores.jsx","components/styles/GameOver.styles.js","components/GameOver.jsx","components/Tetris.jsx","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","HeaderBar","styled","div","LogoImg","img","StyledTetrisWrapper","bgImage","StyledTetris","TETROMINOS","0","shape","color","F","emoji","I","L","N","P","T","U","V","W","X","Y","Z","B","R","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","mtrx","map","_","index","column","row","reverse","flip","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offset","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","posX","posY","reduce","ack","findIndex","unshift","push","sweepRows","StyledCell","props","type","React","memo","StyledStage","height","width","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","ControlWrapper","ControlButton","ControlPanel","movePlayer","dropPlayer","playerRotate","setDropTime","level","src","left","alt","down","right","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","HighscoreWrapper","useScores","scores","setScores","firestore","collection","orderBy","limit","onSnapshot","snapshot","newScores","docs","doc","id","data","score","i","style","justifyContent","username","float","Modal","posed","open","opacity","transition","duration","closed","ModalBackground","background","applyAtStart","display","applyAtEnd","GameOver","isOpen","toggle","rows","ref","useRef","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","name","setName","initialPose","pose","fontWeight","className","onSubmit","e","preventDefault","console","log","alert","add","parseInt","addScore","onChange","currentTarget","autoFocus","maxLength","Tetris","dropTime","setGameOver","updatePlayerPos","playerFlip","setScore","setRows","setLevel","linePoints","calcScore","useGameStatus","modalOpen","setModalOpen","drop","delay","savedCallback","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","keyCode","move","onKeyUp","logo","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80a95297.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emojiwallpaper.eb18f7da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.12fc1234.png\";","module.exports = __webpack_public_path__ + \"static/media/right.b7576efa.png\";","module.exports = __webpack_public_path__ + \"static/media/left.da1e8475.png\";","module.exports = __webpack_public_path__ + \"static/media/down.fec509ad.png\";","module.exports = __webpack_public_path__ + \"static/media/rotate-right.9d57f6f3.png\";","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y++) {\r\n    for (let x = 0; x < player.tetromino[y].length; x++) {\r\n      //1. check that we are on an actual tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          // Collisions to check:\r\n          // 2. check that movement is inside game area height y\r\n          // We should not go through the bottom of the play area\r\n          !stage[y + player.pos.y + moveY] ||\r\n          // 3. Check that movement is inside game area width x\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          // 4. Check that cell is not set to clear, else we are not colliding\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/emojiwallpaper.jpg';\r\n\r\nexport const HeaderBar = styled.div`\r\n  width: 100%;\r\n  background-color: white;\r\n  border-bottom: 2px solid black;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  height: 7vh;\r\n  @media screen and (max-width: 800px) {\r\n    height: 5vh;\r\n  }\r\n`;\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImage}) #fff no-repeat;\r\n  background-size: auto 100%;\r\n  overflow: hidden;\r\n  .overlay {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    height: 100vh;\r\n  }\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    padding: 0 20px;\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    display: flex;\r\n    max-width: unset;\r\n    padding: 0.5vh;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    aside {\r\n      padding: 0px;\r\n      display: flex;\r\n      justify-content: center;\r\n      height: 10vh;\r\n      margin-top: 0.75vh;\r\n      max-width: unset;\r\n    }\r\n  }\r\n`;\r\n","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  F: {\r\n    shape: [\r\n      [0, 'F', 0],\r\n      ['F', 'F', 0],\r\n      [0, 'F', 'F'],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/qpx1QL2/wow.png',\r\n  },\r\n  I: {\r\n    shape: [\r\n      [0, 0, 'I', 0, 0],\r\n      [0, 0, 'I', 0, 0],\r\n      [0, 0, 'I', 0, 0],\r\n      [0, 0, 'I', 0, 0],\r\n      [0, 0, 'I', 0, 0],\r\n    ],\r\n    color: '80, 227, 230',\r\n    emoji: 'https://i.ibb.co/CwMxk0F/smiley.png',\r\n  },\r\n  L: {\r\n    shape: [\r\n      ['L', 0, 0],\r\n      ['L', 0, 0],\r\n      ['L', 'L', 'L'],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/Pc3X0RJ/sad.png',\r\n  },\r\n  N: {\r\n    shape: [\r\n      [0, 0, 'N', 0],\r\n      [0, 'N', 'N', 0],\r\n      [0, 'N', 0, 0],\r\n      [0, 'N', 0, 0],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/KFSbNSC/blush.png',\r\n  },\r\n  P: {\r\n    shape: [\r\n      ['P', 'P', 'P'],\r\n      ['P', 'P', 0],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '223, 217, 36',\r\n    emoji: 'https://i.ibb.co/cC3wdrQ/sunglasses.png',\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 'T', 0],\r\n      [0, 'T', 0],\r\n      ['T', 'T', 'T'],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/FgjtCXm/tears-laughing.png',\r\n  },\r\n  U: {\r\n    shape: [\r\n      ['U', 0, 'U'],\r\n      ['U', 'U', 'U'],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/374MbmM/thinking.png',\r\n  },\r\n  V: {\r\n    shape: [\r\n      ['V', 0, 0],\r\n      ['V', 0, 0],\r\n      ['V', 'V', 'V'],\r\n    ],\r\n    color: '223, 173, 36',\r\n    emoji: 'https://i.ibb.co/J7S1xR7/scared.png',\r\n  },\r\n  W: {\r\n    shape: [\r\n      [0, 'W', 'W'],\r\n      ['W', 'W', 0],\r\n      ['W', 0, 0],\r\n    ],\r\n    color: '48, 211, 56',\r\n    emoji: 'https://i.ibb.co/ftrzHH5/wink-Emoji.png',\r\n  },\r\n  X: {\r\n    shape: [\r\n      [0, 'X', 0],\r\n      ['X', 'X', 'X'],\r\n      [0, 'X', 0],\r\n    ],\r\n    color: '132, 61, 198',\r\n    emoji: 'https://i.ibb.co/xHghkTV/angry.png',\r\n  },\r\n  Y: {\r\n    shape: [\r\n      [0, 0, 0, 0],\r\n      [0, 'Y', 0, 0],\r\n      ['Y', 'Y', 'Y', 'Y'],\r\n      [0, 0, 0, 0],\r\n    ],\r\n    color: '227, 78, 78',\r\n    emoji: 'https://i.ibb.co/8cCvT5P/geek.png',\r\n  },\r\n  Z: {\r\n    shape: [\r\n      ['Z', 'Z', 0],\r\n      [0, 'Z', 0],\r\n      [0, 'Z', 'Z'],\r\n    ],\r\n    color: '36, 95, 223',\r\n    emoji: 'https://i.ibb.co/cFB0Sm0/silly.png',\r\n  },\r\n  // M: {\r\n  //   shape: [['M']],\r\n  //   color: '227, 78, 78',\r\n  //   emoji: 'https://i.ibb.co/X5HXZpS/rainbowpoop-Emoji.png',\r\n  // },\r\n  B: {\r\n    shape: [['B']],\r\n    color: '132, 61, 198',\r\n    emoji: 'https://i.ibb.co/cbWxqwH/fire.png',\r\n  },\r\n  R: {\r\n    shape: [['R']],\r\n    color: '227, 78, 78',\r\n    emoji: 'https://i.ibb.co/ZWygkRY/emoji-rocket.png',\r\n  },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n  const tetrominos = 'FILNPTUVWXYZR';\r\n  let randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n  if (Math.random() <= 0.3) {\r\n    randTetromino = 'R';\r\n  }\r\n  return TETROMINOS[randTetromino];\r\n};\r\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  });\n\n  function rotate(matrix, dir) {\n    // Make the rows to become cols (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function flip(matrix) {\n    const mtrx = matrix.map(x => x.reverse());\n    return mtrx;\n  }\n\n  function playerFlip(stage) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = flip(clonedPlayer.tetromino);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        flip(clonedPlayer.tetromino);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate, playerFlip];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    // Clear row\n    const sweepRows = (newStage) =>\n      newStage.reduce((ack, row) => {\n        // Check if the row does not contain any 0's\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          // Add new rows at the top of the stage, to shift down\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        // Push the rest of rows onto accumulator, 'below' the ones just added\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = (prevStage) => {\n      // First flush the stage\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => {\n          if (cell[1] === 'clear') {\n            if (cell[2] === true) {\n              return ['B', 'clear', false];\n            }\n            return [0, 'clear'];\n          } else {\n            return cell;\n          }\n        })\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n\n      // Then check if we got some score if collided\n      if (player.collided) {\n        resetPlayer();\n\n        const posX = player.pos.x;\n        const posY = player.pos.y;\n        // If the one collided is the single (poop emoji/rocket)\n        if (\n          player.tetromino.length === 1 &&\n          player.tetromino[0].length === 1 &&\n          newStage[posY + 1]\n        ) {\n          // Clear the rocket\n          newStage[posY][posX] = [0, 'clear'];\n          if (posX > 0) {\n            // '' bottom left\n            if (newStage[posY + 1][posX - 1][0] !== 0)\n              newStage[posY + 1][posX - 1] = ['B', 'clear', true];\n            // '' left\n            if (newStage[posY][posX - 1][0] !== 0)\n              newStage[posY][posX - 1] = ['B', 'clear', true];\n          }\n          if (posX < newStage[0].length - 1) {\n            // '' bottom right\n            if (newStage[posY + 1][posX + 1][0] !== 0)\n              newStage[posY + 1][posX + 1] = ['B', 'clear', true];\n            // '' right\n            if (newStage[posY][posX + 1][0] !== 0)\n              newStage[posY][posX + 1] = ['B', 'clear', true];\n          }\n          // '' bottom mid\n          if (newStage[posY + 1][posX][0] !== 0)\n            newStage[posY + 1][posX] = ['B', 'clear', true];\n        }\n\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage((prev) => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  /* background: rgba(${props => props.color}, 0.8); */\r\n  background: ${props =>\r\n    props.color !== '0, 0, 0' ? `url(${props.emoji})` : 'none'};\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  /* border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${props => props.color}, 0.1);\r\n  border-right-color: rgba(${props => props.color}, 1);\r\n  border-top-color: rgba(${props => props.color}, 1);\r\n  border-left-color: rgba(${props => props.color}, 0.3);\r\n  outline: ${props =>\r\n    props.color !== '0, 0, 0' ? '0px solid white' : 'none'} */\r\n}\r\n`;\r\n","import React from 'react';\r\nimport { StyledCell } from './styles/Cell.styles';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\n// React.memo makes sure we only re-render the changed cells\r\nconst Cell = ({ type }) => (\r\n  <StyledCell\r\n    type={type}\r\n    color={TETROMINOS[type].color}\r\n    emoji={TETROMINOS[type].emoji}\r\n  ></StyledCell>\r\n);\r\n\r\nexport default React.memo(Cell);\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(420px / ${props => props.width})\r\n  );\r\n  grid-template-columns: repeat(${props => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 3px solid #333;\r\n  width: 100%;\r\n  max-width: 420px;\r\n  background: #f7f7f7;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    max-width: 100vw;\r\n    grid-template-rows: repeat(\r\n      ${props => props.height},\r\n      calc(70vh / ${props => props.height})\r\n    );\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport Cell from './Cell';\r\n\r\nimport { StyledStage } from './styles/Stage.styles';\r\n\r\nconst Stage = ({ stage }) => {\r\n  return (\r\n    <StyledStage width={stage[0].length} height={stage.length}>\r\n      {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n    </StyledStage>\r\n  );\r\n};\r\n\r\nexport default Stage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  border: 3px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  color: ${props => (props.gameOver ? 'red' : '#333')};\r\n  background: #f7f7f7;\r\n  font-family: Orbitron, Arial, Helvitica, sans-serif;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    min-height: unset;\r\n    height: 3.33vh;\r\n    padding: 8px;\r\n    margin: 0;\r\n    width: 150px;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledDisplay } from './styles/Display.styles.js';\r\n\r\nconst Display = ({ gameOver, text }) => {\r\n  return <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>;\r\n};\r\n\r\nexport default Display;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0 0 20px 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  border: none;\r\n  color: #333;\r\n  background: #fac632;\r\n  font-family: Orbitron, Arial, Helvetica, sans-serif;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 170px;\r\n    height: 10vh;\r\n    padding: 0px;\r\n    margin: 0;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledStartButton } from './styles/StartButton.styles';\r\n\r\nconst StartButton = ({ callback }) => {\r\n  return <StyledStartButton onClick={callback}>Start Game</StyledStartButton>;\r\n};\r\n\r\nexport default StartButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const ControlWrapper = styled.div`\r\n  color: red;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 0.5vh;\r\n  width: 320px;\r\n  @media screen and (min-width: 800px) {\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\nexport const ControlButton = styled.img`\r\n  display: none;\r\n  -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -o-user-select: none;\r\n    user-select: none;\r\n  touch-action: manipulation;\r\n  @media screen and (max-width: 800px) {\r\n    display: unset;\r\n    color: white;\r\n    height: 8vh;\r\n    width: 20%;\r\n    border: 3px solid #333\r\n    border-radius: 15px;\r\n    background-color: #f7f7f7;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport right from '../img/right.png';\r\nimport left from '../img/left.png';\r\nimport down from '../img/down.png';\r\nimport rotate from '../img/rotate-right.png';\r\n\r\nimport { ControlButton, ControlWrapper } from './styles/ControlPanel.styles';\r\n\r\nconst ControlPanel = ({\r\n  movePlayer,\r\n  dropPlayer,\r\n  playerRotate,\r\n  stage,\r\n  setDropTime,\r\n  level\r\n}) => {\r\n  return (\r\n    <ControlWrapper>\r\n      <ControlButton src={left} alt=\"left\" onClick={() => movePlayer(-1)} />\r\n      <ControlButton\r\n        src={down}\r\n        alt=\"down\"\r\n        onClick={() => {\r\n          dropPlayer();\r\n          setDropTime(1000 / (level + 1));\r\n        }}\r\n      />\r\n      <ControlButton\r\n        src={rotate}\r\n        alt=\"rotate\"\r\n        onClick={() => playerRotate(stage, 1)}\r\n      />\r\n\r\n      <ControlButton src={right} alt=\"right\" onClick={() => movePlayer(1)} />\r\n    </ControlWrapper>\r\n  );\r\n};\r\n\r\nexport default ControlPanel;\r\n","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nvar firebaseConfig = {\r\n  apiKey: API_KEY,\r\n  authDomain: 'emoji-tetris1.firebaseapp.com',\r\n  databaseURL: 'https://emoji-tetris1.firebaseio.com',\r\n  projectId: 'emoji-tetris1',\r\n  storageBucket: 'emoji-tetris1.appspot.com',\r\n  messagingSenderId: '42304859550',\r\n  appId: '1:42304859550:web:378c7ed82a1a9b7c367a8f',\r\n  measurementId: 'G-HFTQ64M8VB'\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import styled from 'styled-components';\r\n\r\nexport const HighscoreWrapper = styled.div`\r\n  background: #f7f7f7;\r\n  border: 3px solid #333;\r\n  padding: 0 20px;\r\n  margin: 0 20px;\r\n  font-family: 'Orbitron';\r\n  min-width: 200px;\r\n  width: 250px;\r\n\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n  ol {\r\n    padding-left: 15px;\r\n  }\r\n  li {\r\n    padding-left: 10px;\r\n    font-size: 13px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  @media screen and (max-width: 1100px) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport firebase from '../firebase.js';\r\n\r\nimport { HighscoreWrapper } from './styles/Highscores.styles';\r\n\r\nconst useScores = () => {\r\n  const [scores, setScores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('highscores')\r\n      .orderBy('score', 'desc')\r\n      .limit(10)\r\n      .onSnapshot(snapshot => {\r\n        const newScores = snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setScores(newScores);\r\n      });\r\n  }, []);\r\n  return scores;\r\n};\r\n\r\nconst Highscores = () => {\r\n  const scores = useScores();\r\n  return (\r\n    <HighscoreWrapper>\r\n      <h2>High Scores</h2>\r\n      <ol>\r\n        {scores.map((score, i) => (\r\n          <li key={score.id} style={{ justifyContent: 'space-between' }}>\r\n            <span>{score.username}:</span>\r\n            <span style={{ float: 'right' }}>{score.score}</span>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </HighscoreWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Highscores);\r\n","import styled from 'styled-components';\r\nimport posed from 'react-pose';\r\n\r\nconst modalBackgroundPoses = {\r\n  open: {\r\n    background: 'rgba(0, 0, 0, 0.5)',\r\n    applyAtStart: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  closed: {\r\n    background: 'rgba(0, 0, 0, 0)',\r\n    applyAtEnd: {\r\n      display: 'none'\r\n    }\r\n  }\r\n};\r\n\r\nconst modalPoses = {\r\n  open: {\r\n    opacity: 1,\r\n    transition: {\r\n      opacity: {\r\n        type: 'tween',\r\n        duration: 200\r\n      }\r\n    }\r\n  },\r\n  closed: {\r\n    opacity: 0,\r\n    transition: {\r\n      opacity: {\r\n        type: 'tween',\r\n        duration: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const Modal = styled(posed.div(modalPoses))`\r\n  position: fixed;\r\n  background: white;\r\n  width: 200px;\r\n  height: auto;\r\n  top: 50%;\r\n  text-align: center;\r\n  font-family: Orbitron, Arial, Helvetica, sans-serif;\r\n  left: 50%;\r\n  border-radius: 20px;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 0 2px 4px 0 rgba(50, 50, 93, 0.1);\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n  .result {\r\n    font-size: 1.25em;\r\n    margin: 20px;\r\n  }\r\n  .submit {\r\n    height: 35px;\r\n    width: 80px;\r\n    color: black;\r\n    background-color: #fac632;\r\n    border: none;\r\n    margin-top: 10px;\r\n    font-family: Orbitron, Arial, Helvetica, sans-serif;\r\n    font-weight: bold;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const ModalBackground = styled(posed.div(modalBackgroundPoses))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 20;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { Modal, ModalBackground } from './styles/GameOver.styles';\r\n\r\nimport firebase from '../firebase';\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.removeEventListener('touchstart', listener);\r\n    };\r\n  }, [handler, ref]); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nexport const GameOver = ({ isOpen, toggle, score, rows, level }) => {\r\n  const ref = useRef();\r\n\r\n  useOnClickOutside(ref, () => toggle(false));\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const maxAllowedScore = 300000;\r\n\r\n  const addScore = (score) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('highscores')\r\n      .add({\r\n        username: name,\r\n        score: parseInt(score),\r\n      });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (score > maxAllowedScore) {\r\n      console.log('CHEATER');\r\n      alert('CHEATER!!');\r\n    } else {\r\n      addScore(score);\r\n      toggle(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalBackground initialPose=\"closed\" pose={isOpen ? 'open' : 'closed'}>\r\n      <Modal ref={ref}>\r\n        <h1 style={{ color: 'red', fontWeight: '700' }}>GAME OVER</h1>\r\n        <div className=\"result\">\r\n          <div>\r\n            <strong>Score</strong>: {score}\r\n          </div>\r\n          <div>\r\n            <strong>Rows</strong>: {rows}\r\n          </div>\r\n          <div>\r\n            <strong>Level</strong>: {level}\r\n          </div>\r\n          <br />\r\n          <form onSubmit={onSubmit}>\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.currentTarget.value)}\r\n              autoFocus={true}\r\n              maxLength=\"14\"\r\n            />\r\n            <button className=\"submit\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </ModalBackground>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { useState } from 'react';\r\n\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport {\r\n  StyledTetrisWrapper,\r\n  StyledTetris,\r\n  HeaderBar,\r\n  LogoImg\r\n} from './styles/Tetris.styles';\r\n\r\n// Custom Hooks\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\nimport logo from '../img/logo.png';\r\n\r\n// Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\nimport ControlPanel from './ControlPanel';\r\nimport Highscores from './Highscores';\r\nimport GameOver from './GameOver';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [\r\n    player,\r\n    updatePlayerPos,\r\n    resetPlayer,\r\n    playerRotate,\r\n    playerFlip\r\n  ] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      // Activate the interval again when user releases down arrow.\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1));\r\n      }\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    // Reset everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setScore(0);\r\n    setLevel(0);\r\n    setRows(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  const drop = () => {\r\n    // Increase level when player has cleared 10 rows\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel(prev => prev + 1);\r\n      // Also increase speed\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      // Game over!\r\n      if (player.pos.y < 1) {\r\n        setModalOpen(true);\r\n        console.log('GAME OVER!!!');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    // We don't need to run the interval when we use the arrow down to\r\n    // move the tetromino downwards. So deactivate it for now.\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  // This one starts the game\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 70) {\r\n        playerFlip(stage);\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <div className=\"overlay\">\r\n        <HeaderBar>\r\n          <LogoImg src={logo} alt=\"logo\" />\r\n        </HeaderBar>\r\n        <StyledTetris>\r\n          <Highscores />\r\n          <Stage stage={stage} />\r\n          <ControlPanel\r\n            movePlayer={movePlayer}\r\n            dropPlayer={dropPlayer}\r\n            playerRotate={playerRotate}\r\n            stage={stage}\r\n            setDropTime={setDropTime}\r\n            level={level}\r\n          />\r\n          <aside>\r\n            {gameOver ? (\r\n              <>\r\n                <Display gameOver={gameOver} text=\"Game Over\" />\r\n                <GameOver\r\n                  isOpen={modalOpen}\r\n                  toggle={setModalOpen}\r\n                  score={score}\r\n                  rows={rows}\r\n                  level={level}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div>\r\n                <Display text={`Score: ${score}`} />\r\n                <Display text={`Rows: ${rows}`} />\r\n                <Display text={`Level: ${level}`} />\r\n              </div>\r\n            )}\r\n            {}\r\n            <StartButton callback={startGame} />\r\n          </aside>\r\n        </StyledTetris>\r\n      </div>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [100, 300, 600, 1200, 2400];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Tetris />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport HttpsRedirect from 'react-https-redirect';\n\nReactDOM.render(\n  <HttpsRedirect>\n    <App />\n  </HttpsRedirect>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}